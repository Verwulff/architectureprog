package shaverma.frontend;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import shaverma.service.StorageItem;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowEvent;
import java.util.List;

public class AddItemForm extends BaseApplicationForm {
    private JPanel addItemForm;
    private JComboBox componentSelector;
    private JSpinner componentAmount;
    private JButton OKButton;

    @Override
    JPanel createFormPanel() {
        return addItemForm;
    }

    @Override
    String getTitle() {
        return "Добавить";
    }

    @Override
    Dimension getSize() {
        return new Dimension(600, 170);
    }

    public AddItemForm(Application app) {
        super(app);
        initItemsList();
        initOKButton();
        initAmountChooser();
    }

    private void initItemsList() {
        List<StorageItem> items = getService().getStorageItems();
        for (StorageItem i : items) {
            String description = String.format("%s (цена: %s, %s осталось)", i.getName(), i.getPrice(), i.getAmount());
            componentSelector.addItem(new ComboBoxItem<Integer>(i.getId(), description));
        }
    }

    private void initOKButton() {
        OKButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent mouseEvent) {
                super.mouseClicked(mouseEvent);
                ComboBoxItem<Integer> selectedComponent = (ComboBoxItem<Integer>) componentSelector.getSelectedItem();
                Integer amount = (Integer) componentAmount.getValue();
                getService().addItemToClientOrder(selectedComponent.getValue(), amount);
                JFrame activeFrame = getApp().getActiveFrame();
                activeFrame.dispatchEvent(new WindowEvent(activeFrame, WindowEvent.WINDOW_CLOSING));
            }
        });
    }

    private void initAmountChooser() {
        SpinnerNumberModel spinnerModel = new SpinnerNumberModel(1, 0, 1000000, 1);
        componentAmount.setModel(spinnerModel);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        addItemForm = new JPanel();
        addItemForm.setLayout(new GridLayoutManager(1, 1, new Insets(10, 10, 10, 10), -1, -1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(4, 1, new Insets(0, 0, 0, 0), -1, -1));
        addItemForm.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        componentSelector = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        componentSelector.setModel(defaultComboBoxModel1);
        panel1.add(componentSelector, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        componentAmount = new JSpinner();
        panel1.add(componentAmount, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        OKButton = new JButton();
        OKButton.setText("OK");
        panel1.add(OKButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return addItemForm;
    }
}
